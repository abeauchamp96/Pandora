name: $(Build.DefinitionName).$(Build.SourceBranchName).$(Date:yyyyMMdd).$(Rev:r)

pool: 'Hyrule'

pr:
- develop
- main

trigger:
- develop
- main

variables:
  version: 0.4.0
  pandora: 'Pandora-$(version)'
  buildConfiguration: '--configuration Release'
  projectsPath: '**/*.csproj'

stages:
- stage: Build_Pandora
  displayName: 'Build Pandora'
  jobs:
    - job: Build
      displayName: 'Build'
      steps:
        - task: DotNetCoreCLI@2
          displayName: 'Restore packages'
          inputs:
            command: restore
            projects: $(projectsPath)
            feedsToUse: 'select'
            vstsFeed: '1ef4c0cf-1819-4ee1-8807-d43cd89c12fe/ddbe434d-9f4f-404b-8ac2-fd37fda6529e'
        - task: DotNetCoreCLI@2
          displayName: 'Compile all projects'
          inputs:
            command: build
            projects: $(projectsPath)
            arguments: '$(buildConfiguration)'
        - task: DotNetCoreCLI@2
          displayName: 'Run unit tests'
          inputs:
            command: test
            projects: '**/*.Tests.csproj'
            arguments: '$(buildConfiguration) --no-build'

- stage: Package_Pandora
  #condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'main'))
  dependsOn: Build_Pandora
  displayName: 'Package Pandora'
  variables:
    pandoraPackagePath: $(Build.ArtifactStagingDirectory)/$(pandora).zip
  jobs:
    - job: Package
      displayName: 'Package'
      steps:
        - task: CopyFiles@2
          displayName: 'Copy snippets and templates to staging directory'
          inputs:
            SourceFolder: $(System.DefaultWorkingDirectory)
            Contents: |
              **\snippets\**
              **\templates\**
              changelog.md
            TargetFolder: $(Build.ArtifactStagingDirectory)
            OverWrite: true
        - task: ArchiveFiles@2
          displayName: 'Zip the package'
          inputs:
            rootFolderOrFile: $(Build.ArtifactStagingDirectory)
            includeRootFolder: false
            archiveType: zip
            archiveFile: $(pandoraPackagePath)
            replaceExistingArchive: true
        - publish: $(pandoraPackagePath)
          displayName: 'Publish Pandora Package'
          artifact: pandora

- stage: Package_Pandora_nugets
  #condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'main'))
  dependsOn: Build_Pandora
  displayName: 'Package Pandora nugets'
  variables:
    pandoraNugetsPath: $(Build.ArtifactStagingDirectory)/nuget
  jobs:
    - job: Package_nugets
      displayName: 'Package nugets'
      steps:
        - task: DotNetCoreCLI@2
          displayName: 'Package nugets'
          inputs:
            command: pack
            arguments: '$(buildConfiguration) --no-build --output $(Build.BinariesDirectory)'
            versioningScheme: off
            packagesToPack: 
        - task: CopyFiles@2
          displayName: 'Copy nuget packages to staging directory'
          inputs:
            Contents: |
              **/*.nupkg
            SourceFolder: $(Build.BinariesDirectory)
            TargetFolder: $(pandoraNugetsPath)
            OverWrite: true
            flattenFolders: true
        - publish: $(pandoraNugetsPath)
          displayName: 'Publish nugets'
          artifact: nuget