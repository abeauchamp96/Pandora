<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Inject</Title>
      <Description>Insert an injectable property for the component</Description>
      <Shortcut>inject</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Keywords>
        <Keyword>C#</Keyword>
        <Keyword>Blazor</Keyword>
      </Keywords>
      <Author>Alexandre Beauchamp</Author>
    </Header>
    <Snippet>
      <Imports>
        <Import>
          <Namespace>Microsoft.AspNetCore.Components</Namespace>
        </Import>
      </Imports>
      <Declarations>
        <Literal>
          <ID>ServiceType</ID>
          <Default>Service</Default>
        </Literal>
        <Literal>
          <ID>ServiceName</ID>
          <Default>Service</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="method decl">
        <![CDATA[[Inject]
        private I$ServiceType$ $ServiceName$ { get; set; } = default!;$end$
        ]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Parameter</Title>
      <Description>Insert a parameter property for the component</Description>
      <Shortcut>param</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Keywords>
        <Keyword>C#</Keyword>
        <Keyword>Blazor</Keyword>
      </Keywords>
      <Author>Alexandre Beauchamp</Author>
    </Header>
    <Snippet>
      <Imports>
        <Import>
          <Namespace>Microsoft.AspNetCore.Components</Namespace>
        </Import>
      </Imports>
      <Declarations>
        <Literal>
          <ID>ParameterType</ID>
          <Default>int</Default>
        </Literal>
        <Literal>
          <ID>ParameterName</ID>
          <Default>Parameter</Default>
        </Literal>
        <Literal>
          <ID>DefaultValue</ID>
          <Default>default!</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="method decl">
        <![CDATA[[Parameter]
        public $ParameterType$ $ParameterName$ { get; set; } = $DefaultValue$;$end$
        ]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Cascading parameter</Title>
      <Description>Insert a cascading parameter property for the component</Description>
      <Shortcut>cparam</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Keywords>
        <Keyword>C#</Keyword>
        <Keyword>Blazor</Keyword>
      </Keywords>
      <Author>Alexandre Beauchamp</Author>
    </Header>
    <Snippet>
      <Imports>
        <Import>
          <Namespace>Microsoft.AspNetCore.Components</Namespace>
        </Import>
      </Imports>
      <Declarations>
        <Literal>
          <ID>ParameterType</ID>
          <Default>int</Default>
        </Literal>
        <Literal>
          <ID>ParameterName</ID>
          <Default>Parameter</Default>
        </Literal>
        <Literal>
          <ID>DefaultValue</ID>
          <Default>default!</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="method decl">
        <![CDATA[[CascadingParameter]
        private $ParameterType$ $ParameterName$ { get; set; } = $DefaultValue$;$end$
        ]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>OnAfterRender</Title>
      <Description>Insert the OnAfterRender override for the component</Description>
      <Shortcut>onafter</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Keywords>
        <Keyword>C#</Keyword>
        <Keyword>Blazor</Keyword>
      </Keywords>
      <Author>Alexandre Beauchamp</Author>
    </Header>
    <Snippet>
      <Code Language="CSharp" Kind="method decl">
        <![CDATA[protected override void OnAfterRender(bool firstRender) => base.OnAfterRender(firstRender);$end$]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>OnAfterRenderAsync</Title>
      <Description>Insert the OnAfterRenderAsync override for the component</Description>
      <Shortcut>aonafter</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Keywords>
        <Keyword>C#</Keyword>
        <Keyword>Blazor</Keyword>
      </Keywords>
      <Author>Alexandre Beauchamp</Author>
    </Header>
    <Snippet>
      <Imports>
        <Import>
          <Namespace>System.Threading.Tasks</Namespace>
        </Import>
      </Imports>
      <Code Language="CSharp" Kind="method decl">
        <![CDATA[protected override Task OnAfterRenderAsync(bool firstRender) => base.OnAfterRenderAsync(firstRender);$end$]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>OnInitialized</Title>
      <Description>Insert the OnInitialized override for the component</Description>
      <Shortcut>oninit</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Keywords>
        <Keyword>C#</Keyword>
        <Keyword>Blazor</Keyword>
      </Keywords>
      <Author>Alexandre Beauchamp</Author>
    </Header>
    <Snippet>
      <Code Language="CSharp" Kind="method decl">
        <![CDATA[protected override void OnInitialized() => base.OnInitialized();$end$]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>OnInitializedAsync</Title>
      <Description>Insert the OnInitializedAsync override for the component</Description>
      <Shortcut>aoninit</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Keywords>
        <Keyword>C#</Keyword>
        <Keyword>Blazor</Keyword>
      </Keywords>
      <Author>Alexandre Beauchamp</Author>
    </Header>
    <Snippet>
      <Imports>
        <Import>
          <Namespace>System.Threading.Tasks</Namespace>
        </Import>
      </Imports>
      <Code Language="CSharp" Kind="method decl">
        <![CDATA[protected override Task OnInitializedAsync() => base.OnInitializedAsync();$end$]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>OnParametersSet</Title>
      <Description>Insert the OnParametersSet override for the component</Description>
      <Shortcut>onparam</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Keywords>
        <Keyword>C#</Keyword>
        <Keyword>Blazor</Keyword>
      </Keywords>
      <Author>Alexandre Beauchamp</Author>
    </Header>
    <Snippet>
      <Code Language="CSharp" Kind="method decl">
        <![CDATA[protected override void OnParametersSet() => base.OnParametersSet();$end$]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>OnParametersSetAsync</Title>
      <Description>Insert the OnParametersSetAsync override for the component</Description>
      <Shortcut>aonparam</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Keywords>
        <Keyword>C#</Keyword>
        <Keyword>Blazor</Keyword>
      </Keywords>
      <Author>Alexandre Beauchamp</Author>
    </Header>
    <Snippet>
      <Imports>
        <Import>
          <Namespace>System.Threading.Tasks</Namespace>
        </Import>
      </Imports>
      <Code Language="CSharp" Kind="method decl">
        <![CDATA[protected override Task OnParametersSetAsync() => base.OnParametersSetAsync();$end$]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>SetParametersAsync</Title>
      <Description>Insert the SetParametersAsync override for the component</Description>
      <Shortcut>setparam</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Keywords>
        <Keyword>C#</Keyword>
        <Keyword>Blazor</Keyword>
      </Keywords>
      <Author>Alexandre Beauchamp</Author>
    </Header>
    <Snippet>
      <Imports>
        <Import>
          <Namespace>Microsoft.AspNetCore.Components</Namespace>
        </Import>
        <Import>
          <Namespace>System.Threading.Tasks</Namespace>
        </Import>
      </Imports>
      <Code Language="CSharp" Kind="method decl">
        <![CDATA[public override Task SetParametersAsync(ParameterView parameters) => base.SetParametersAsync(parameters);$end$]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>ShouldRender</Title>
      <Description>Insert the ShouldRender override for the component</Description>
      <Shortcut>shouldrender</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Keywords>
        <Keyword>C#</Keyword>
        <Keyword>Blazor</Keyword>
      </Keywords>
      <Author>Alexandre Beauchamp</Author>
    </Header>
    <Snippet>
      <Code Language="CSharp" Kind="method decl">
        <![CDATA[protected override bool ShouldRender() => base.ShouldRender();$end$]]>
      </Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>