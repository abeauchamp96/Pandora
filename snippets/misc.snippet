<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Ternary conditional operator</Title>
      <Description>Insert a ternary condition operator: ?:</Description>
      <Shortcut>ter</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Keywords>
        <Keyword>C#</Keyword>
        <Keyword>Operator</Keyword>
      </Keywords>
      <Author>Alexandre Beauchamp</Author>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>Condition</ID>
          <Default>Condition</Default>
        </Literal>
        <Literal>
          <ID>TrueStatement</ID>
          <Default>true</Default>
        </Literal>
        <Literal>
          <ID>FalseStatement</ID>
          <Default>false</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[$Condition$ ? $TrueStatement$ : $FalseStatement$;$end$]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Variable with ternary conditional operator</Title>
      <Description>Affect variable from a ternary condition operator</Description>
      <Shortcut>vter</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Keywords>
        <Keyword>C#</Keyword>
        <Keyword>Operator</Keyword>
      </Keywords>
      <Author>Alexandre Beauchamp</Author>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>Variable</ID>
          <Default>value</Default>
        </Literal>
        <Literal>
          <ID>Condition</ID>
          <Default>Condition</Default>
        </Literal>
        <Literal>
          <ID>TrueStatement</ID>
          <Default>true</Default>
        </Literal>
        <Literal>
          <ID>FalseStatement</ID>
          <Default>false</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[var $Variable$ = $Condition$ ? $TrueStatement$ : $FalseStatement$;$end$]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Return with ternary conditional operator</Title>
      <Description>Return the value from a ternary condition operator</Description>
      <Shortcut>rter</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Keywords>
        <Keyword>C#</Keyword>
        <Keyword>Operator</Keyword>
      </Keywords>
      <Author>Alexandre Beauchamp</Author>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>Condition</ID>
          <Default>Condition</Default>
        </Literal>
        <Literal>
          <ID>TrueStatement</ID>
          <Default>true</Default>
        </Literal>
        <Literal>
          <ID>FalseStatement</ID>
          <Default>false</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[return $Condition$ ? $TrueStatement$ : $FalseStatement$;$end$]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Variable with switch expression</Title>
      <Description>Affect variable from switch expression</Description>
      <Shortcut>vswitch</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Keywords>
        <Keyword>C#</Keyword>
      </Keywords>
      <Author>Alexandre Beauchamp</Author>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>VariableType</ID>
          <Default>var</Default>
        </Literal>
        <Literal>
          <ID>VariableName</ID>
          <Default>value</Default>
        </Literal>
        <Literal>
          <ID>ValueSwitch</ID>
          <Default>valueSwitch</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[$VariableType$ $VariableName$ = $ValueSwitch$ switch
        {
            $end$
        };]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Return with switch expression</Title>
      <Description>Return the value from the switch expression</Description>
      <Shortcut>rswitch</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Keywords>
        <Keyword>C#</Keyword>
      </Keywords>
      <Author>Alexandre Beauchamp</Author>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>Variable</ID>
          <Default>value</Default>
        </Literal>
        <Literal>
          <ID>Variable</ID>
          <Default>value</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[return $Variable$ switch
        {
            $end$
        };]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>TryParse</Title>
      <Description>Insert TryParse method</Description>
      <Shortcut>tryp</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Keywords>
        <Keyword>C#</Keyword>
      </Keywords>
      <Author>Alexandre Beauchamp</Author>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>Object</ID>
          <Default>int</Default>
        </Literal>
        <Literal>
          <ID>Value</ID>
          <Default>string.Empty</Default>
        </Literal>
        <Literal>
          <ID>ParsedValue</ID>
          <Default>parsedValue</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[$Object$.TryParse($Value$, out var $ParsedValue$);$end$]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>TryParse with if statement</Title>
      <Description>Insert TryParse method with an if statement</Description>
      <Shortcut>iftryp</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Keywords>
        <Keyword>C#</Keyword>
      </Keywords>
      <Author>Alexandre Beauchamp</Author>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>Object</ID>
          <Default>int</Default>
        </Literal>
        <Literal>
          <ID>Value</ID>
          <Default>string.Empty</Default>
        </Literal>
        <Literal>
          <ID>ParsedValue</ID>
          <Default>parsedValue</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[if($Object$.TryParse($Value$, out var $ParsedValue$))
        {
            $end$
        }]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>TryParse with ternary condition</Title>
      <Description>Insert TryParse method with ternary condition</Description>
      <Shortcut>tertryp</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Keywords>
        <Keyword>C#</Keyword>
      </Keywords>
      <Author>Alexandre Beauchamp</Author>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>Object</ID>
          <Default>int</Default>
        </Literal>
        <Literal>
          <ID>Value</ID>
          <Default>string.Empty</Default>
        </Literal>
        <Literal>
          <ID>ParsedValue</ID>
          <Default>parsedValue</Default>
        </Literal>
        <Literal>
          <ID>FalseStatement</ID>
          <Default>default</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[$Object$.TryParse($Value$, out var $ParsedValue$) ? $ParsedValue$ : $FalseStatement$;$end$]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Private readonly field</Title>
      <Description>Insert a private readonly field for a class</Description>
      <Shortcut>field</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Keywords>
        <Keyword>C#</Keyword>
      </Keywords>
      <Author>Alexandre Beauchamp</Author>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>FieldType</ID>
          <Default>Service</Default>
        </Literal>
        <Literal>
          <ID>ServiceName</ID>
          <Default>service</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[private readonly I$FieldType$ $ServiceName$;$end$]]>
      </Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>